services:
  db:
    image: docker.arvancloud.ir/postgres:17.4-alpine
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
  redis:
    image: redis:7.4.2-alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
  django:
    build: .
    volumes:
      - .:/app
    container_name: django-docker
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      REDIS_URL: "redis://redis:6379/0"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    env_file:
      - .env
  celery-worker:
    build: .
    container_name: celery-worker
    restart: unless-stopped
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - django
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    env_file:
      - .env
    entrypoint: ["/app/celery-entrypoint.sh"]
    command: celery -A minishop worker -l info
  celery-beat:
    build: .
    container_name: celery-beat
    restart: unless-stopped
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - django
      - celery-worker
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_LOGLEVEL: ${DJANGO_LOGLEVEL}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    env_file:
      - .env
    entrypoint: ["/app/celery-beat-entrypoint.sh"]
    command: celery -A minishop beat -l info


volumes:
  pgdata:
  redisdata:
